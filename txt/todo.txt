/--- Dingen die niet heel noodzakelijk zijn, maar zou wel netjes zijn als het zou gebeuren ---/

- Inloggen en aanmelden met facebook
- Zoeken naar eigen gemaakte restaurants verbeteren
    - Als de categorieen toegevoegd kunnen worden aan restaurants, hiermee zoeken
    - Nu wordt er alleen gekeken of de plaats van het restaurant de door de gebruiker gezochte plaats is, of ditzelfde voor de postcode. Maar hij zou alles in een radius van 40 kilometer moeten doen (default).
    - Zoeken met de afstandsfilter.
- Kaart geimplenteerd in refreshResults.php en restaurant.php
- Categorieen kiezen bij het aanmaken/editen van een restaurant
- Een aantal dingen komen zeer slecht uit op de mobiele site.
    - Sterren in zoekresultaten op index.php
    - Zoekbalk helemaal bovenaan iedere pagina
    - De knop voor het kaartje naast sort-by
- Er wordt geen rekening gehouden met sterren die gegeven zijn door onze eigen gebruikers (ipv yelp).
- Restauranteigenaren kunnen hun restaurant koppelen aan yelp, zodat er niet twee dezelfde restaurants op staan.
- Gebruiker kan zijn info wijzigen, bestellingen bekijken, als hij is ingelogd.

/--- Alles wat nog moet gebeuren ---/

1. Het specify-gedeelte (links op de pagina met zoekresultaten) {index.php}
    a) "What kind of restaurant are you looking for?" moet werken net zoals "In what radius do you want to search?"            
        i) Een aantal categorieÃ«n restaurants moet of via een API of hiervan: "http://www.yelp.com/developers/documentation/v2/all_category_list" gekopieerd worden.
        ii) Het moet met AJAX werken net zoals het rating-specify gedeelte.
    b) "Do you want to order or pick up?" moet werken net zoals "In what radius do you want to search?"
        i) Dit moet volledig uit onze database komen, voor restaurants die willen bezorgen en laten afhalen (dus bestellen moet bij dat restaurant mogelijk zijn).
        ii) Het moet met AJAX werken net zoals het rating-specify gedeelte.

2. Een kaart met alle restaurants binnen de zoekresultaten laten zien, waar nu de resultaten op een rijtje staan. {index.php}

3. De volledige pagina van een restaurant {restaurant.php}
    a) Het linker, smalle gedeelte van de pagina
        i) Rating (kan je kopieren van refreshResults.php, alleen $outOfFiveStars een andere waarde geven.)
        ii) Locatie, telefoon, evt. afstand vanaf je postcode of ingegeven plaats, categorieen.
        iii) in Yelp API documentatie kijken wat nog meer mogelijk is.
    b) Het rechter, brede gedeelte van de pagina
        i) Foto's (zou mooi zijn in een slideshow van bootstrap o.i.d.)
        ii) Eventueel het logo ophalen in Yelp.
        iii) Kaart van waar het is en de aangegeven locatie die opgeslagen staat in $_COOKIE["place"].
        iv) in Yelp API documentatie kijken wat nog meer mogelijk is.
        v) Niet alle informatie, foto's en kaarten rechts onder elkaar, maar gebruik maken van <div class="row"> en <div class="col-lg-x"> (zie Bootstrap documentatie).
    c) De zoekfunctie in de header naar index.php laten verwijzen.
    d) Net zoals bij index.php, als de header hoger dan 50 pixels is, moet de padding-top van de pagina groter worden, omdat de header ands voor de overige content van de pagina gaat zitten.

4. De database maken (met MySQL en PHPMyAdmin, zie connect.php hoe je in de PHPMyAdmin komt.)
    a) Tabel 'users', het kunnen gebruikers zijn die via hun email hun account geverifieerd hebben of die via Facebook een account hebben aangemaakt. Bij het aanmaken van een account komen de gegevens in deze tabel.
        i) Moeten nog kolommen 'bezorgadres', 'bezorgpostcode', 'bezorgwoonplaats' bij.
    b) Tabel 'reviews' die mensen op onze pagina plaatsen.
    c) Tabel 'restaurants', waarin restauranteigenaren hun restaurant toevoegen die niet op Yelp staan. Tabel heeft zelfde structuur als Yelp.
    d) Tabel 'menu', waarin de menu's staan van restaurants, gelinkt aan het restaurant_id van Yelp of van de tabel 'restaurants'.
    e) Tabel 'orders', waarin de statussen en informatie [bezorgadres, tijd e.d.] van bestellingen staan.
    
5. Sign up (kan met email en facebook) en login pagina maken (is al een gedeelte van gemaakt, deze verschijnt over de rest van de pagina heen).

6. Als iemand zich aanmeldt, komt hij op deze pagina (als hij via email werkt, krijgt hij een mail met een link). Hier moeten gegevens, zoals voornaam en achternaam (en overige informatie, die nog in de database mist) worden ingegeven. Bezorgadres, hoeft nog niet. Dit hoeft pas de eerste keer als iemand eten thuis laat bezorgen. {auth.php}

7. "I'm an owner" moet linken naar {signupowner.php} (bestaat nog niet). In dit bestand kan een eigenaar zijn restaurant toevoegen en wordt geupload in de database. Hier moet de eigenaar ook aangeven of hij wil dat mensen bij zijn restaurant kunnen bestellen.

8. Een pagina waarin klanten bij een restaurant eten kunnen bestellen bij een restaurant, die daar toestemming voor gegeven heeft. (het eten aanklikken gebeurt al in restaurant.php) De afhandeling van de bestelling wordt hier ook gedaan (bezorgadres invullen, {betalen wordt waarschijnlijk een beetje moeilijk, dus laten we in het begin maar gewoon zeggen dat aan de deur wordt betaald.}). {order.php} Ook wordt er een mailtje gestuurd naar de eigenaar als er een order binnen is.

9. Een pagina voor de restauranteigenaren waarin ze informatie over hun restaurant kunnen wijzigen (de informatie die op Yelp staat, kunnen ze hier niet wijzigen). Hier kunnen ze ook hun menu toevoegen, aangeven dat klanten bij hun kan afhalen of laten bezorgen. Orders kunnen hier ook bekeken worden. {owner.php}

10. Eventueel een contact.php en een about.php pagina, maar hoeft niet per se. Zou wel netjes zijn.

11. Onze eigen API (Ik stel voor een REST API, die gebruik maakt van MySQL en XML en JSON terug kan geven, afhankelijk wat de gebruiker vraagt.) maken met de functies:
    a) showRestaurant: Laat informatie over restaurants zien. Data sources: onze database en Yelp databse.
    b) showReviews: Laat reviews zien over een restaurant. Data sources: onze database en Yelp database.
    c) showMenu: Laat menu zien van restaurant. Data sources: onze database
    d) showUserInfo: Laat zeer beperkte informatie over gebruikers zien.
    e) Eventueel nog meer.
    
12. Een pagina waarin de gebruiker zijn gegevens kan wijzigen en zijn bestellingen kan bekijken. {user.php}

13. Report schrijven.

14. Een pagina waar onze API wordt uitgelegd. [optioneel]
____________________________________________
Wat     | Wie       | Gedaan    | Wanneer
1       | Coen      |           | 5 januari
2       | Thijs     |           | 5 januari
3       | Enzo      |           | 5 januari
4a      | Coen      | X         | -
4b      | Coen      | X         | -
4rest   | Max       |           | 6 januari
5       | Coen      |           | . januari
6       | Coen      |           | . januari
7       | Max       |           | 6 januari
8       | Enzo      |           | . januari
9       | Max       |           | 6 januari
10      | Optioneel |           | 
11      | ?         |           | 
12      | Thijs     |           | 8 januari
13      | Iedereen  |           | 
14      | Optioneel |           | 
_____________________________________________

/--- OUD ---/

To do list

16 december
Node JS leren - Iedereen (we gaan mySQL en PHP gebruiken)
Verbinding maken met de Yelp API - Enzo - Gedaan
Als je op een box klikt, dat je naar de volgende pagina gaat - Max - Gedaan
Verbinding maken met Facebook API - Coen - Gedaan
Google Maps API - Thijs - Di 16 december

5 januari
Yelp helemaal integreren -> alle nodige informatie uit JSON in variabelen zetten -> Enzo
Nadat Enzo klaar is, Max -> In nextpage.php variabelen gebruiken -> Max
Header voor iedere pagina bruikbaar maken -> Coen
Eigen reviews database maken, misschien dat mensen het al kunnen intypen, dat het automisch in de database wordt gezet -> Max en Coen

